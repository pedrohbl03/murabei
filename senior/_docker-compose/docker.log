Attaching to backend-1, frontend-1
frontend-1  |   ▲ Next.js 14.2.25
frontend-1  |   - Local:        http://06c5fb9bb9d9:3000
frontend-1  |   - Network:      http://172.18.0.3:3000
frontend-1  | 
frontend-1  |  ✓ Starting...
frontend-1  |  ✓ Ready in 156ms
backend-1   |  * Serving Flask app 'app'
backend-1   |  * Debug mode: off
frontend-1  | API Response: {
frontend-1  |   status: 200,
frontend-1  |   statusText: 'OK',
frontend-1  |   headers: Object [AxiosHeaders] {
frontend-1  |     server: 'Werkzeug/3.0.2 Python/3.9.23',
frontend-1  |     date: 'Mon, 16 Jun 2025 19:12:16 GMT',
frontend-1  |     'content-type': 'application/json',
frontend-1  |     'content-length': '3325',
frontend-1  |     'access-control-allow-origin': '*',
frontend-1  |     connection: 'close'
frontend-1  |   },
frontend-1  |   config: {
frontend-1  |     transitional: {
frontend-1  |       silentJSONParsing: true,
frontend-1  |       forcedJSONParsing: true,
frontend-1  |       clarifyTimeoutError: false
frontend-1  |     },
frontend-1  |     adapter: [ 'xhr', 'http', 'fetch' ],
frontend-1  |     transformRequest: [ [Function (anonymous)] ],
frontend-1  |     transformResponse: [ [Function (anonymous)] ],
frontend-1  |     timeout: 0,
frontend-1  |     xsrfCookieName: 'XSRF-TOKEN',
frontend-1  |     xsrfHeaderName: 'X-XSRF-TOKEN',
frontend-1  |     maxContentLength: -1,
frontend-1  |     maxBodyLength: -1,
frontend-1  |     env: { FormData: [Function [FormData]], Blob: [class Blob] },
frontend-1  |     validateStatus: [Function: validateStatus],
frontend-1  |     headers: Object [AxiosHeaders] {
frontend-1  |       Accept: 'application/json, text/plain, */*',
frontend-1  |       'Content-Type': 'application/json',
frontend-1  |       'User-Agent': 'axios/1.10.0',
frontend-1  |       'Accept-Encoding': 'gzip, compress, deflate, br'
frontend-1  |     },
frontend-1  |     baseURL: 'http://backend:5000/api/v1',
frontend-1  |     params: { page: 1, limit: 10 },
frontend-1  |     method: 'get',
frontend-1  |     url: '/books',
frontend-1  |     allowAbsoluteUrls: true,
frontend-1  |     data: undefined
frontend-1  |   },
frontend-1  |   request: <ref *1> ClientRequest {
frontend-1  |     _events: [Object: null prototype] {
frontend-1  |       abort: [Function (anonymous)],
frontend-1  |       aborted: [Function (anonymous)],
frontend-1  |       connect: [Function (anonymous)],
frontend-1  |       error: [Function (anonymous)],
frontend-1  |       socket: [Function (anonymous)],
frontend-1  |       timeout: [Function (anonymous)],
frontend-1  |       finish: [Function: requestOnFinish]
frontend-1  |     },
frontend-1  |     _eventsCount: 7,
frontend-1  |     _maxListeners: undefined,
frontend-1  |     outputData: [],
frontend-1  |     outputSize: 0,
frontend-1  |     writable: true,
frontend-1  |     destroyed: false,
frontend-1  |     _last: true,
frontend-1  |     chunkedEncoding: false,
frontend-1  |     shouldKeepAlive: false,
frontend-1  |     maxRequestsOnConnectionReached: false,
frontend-1  |     _defaultKeepAlive: true,
frontend-1  |     useChunkedEncodingByDefault: false,
frontend-1  |     sendDate: false,
frontend-1  |     _removedConnection: false,
frontend-1  |     _removedContLen: false,
frontend-1  |     _removedTE: false,
frontend-1  |     strictContentLength: false,
frontend-1  |     _contentLength: 0,
frontend-1  |     _hasBody: true,
frontend-1  |     _trailer: '',
frontend-1  |     finished: true,
frontend-1  |     _headerSent: true,
frontend-1  |     _closed: false,
frontend-1  |     socket: Socket {
frontend-1  |       connecting: false,
frontend-1  |       _hadError: false,
frontend-1  |       _parent: null,
frontend-1  |       _host: 'backend',
frontend-1  |       _closeAfterHandlingError: false,
frontend-1  |       _readableState: [ReadableState],
frontend-1  |       _events: [Object: null prototype],
frontend-1  |       _eventsCount: 7,
frontend-1  |       _maxListeners: undefined,
frontend-1  |       _writableState: [WritableState],
frontend-1  |       allowHalfOpen: false,
frontend-1  |       _sockname: null,
frontend-1  |       _pendingData: null,
frontend-1  |       _pendingEncoding: '',
frontend-1  |       server: null,
frontend-1  |       _server: null,
frontend-1  |       parser: null,
frontend-1  |       _httpMessage: [Circular *1],
frontend-1  |       [Symbol(async_id_symbol)]: 254,
frontend-1  |       [Symbol(kHandle)]: [TCP],
frontend-1  |       [Symbol(lastWriteQueueSize)]: 0,
frontend-1  |       [Symbol(timeout)]: null,
frontend-1  |       [Symbol(kBuffer)]: null,
frontend-1  |       [Symbol(kBufferCb)]: null,
frontend-1  |       [Symbol(kBufferGen)]: null,
frontend-1  |       [Symbol(kCapture)]: false,
frontend-1  |       [Symbol(kSetNoDelay)]: true,
frontend-1  |       [Symbol(kSetKeepAlive)]: true,
frontend-1  |       [Symbol(kSetKeepAliveInitialDelay)]: 60,
frontend-1  |       [Symbol(kBytesRead)]: 0,
frontend-1  |       [Symbol(kBytesWritten)]: 0
frontend-1  |     },
frontend-1  |     _header: 'GET /api/v1/books?page=1&limit=10 HTTP/1.1\r\n' +
frontend-1  |       'Accept: application/json, text/plain, */*\r\n' +
frontend-1  |       'Content-Type: application/json\r\n' +
frontend-1  |       'User-Agent: axios/1.10.0\r\n' +
frontend-1  |       'Accept-Encoding: gzip, compress, deflate, br\r\n' +
frontend-1  |       'Host: backend:5000\r\n' +
frontend-1  |       'Connection: close\r\n' +
frontend-1  |       '\r\n',
frontend-1  |     _keepAliveTimeout: 0,
frontend-1  |     _onPendingData: [Function: nop],
frontend-1  |     agent: Agent {
frontend-1  |       _events: [Object: null prototype],
frontend-1  |       _eventsCount: 2,
frontend-1  |       _maxListeners: undefined,
frontend-1  |       defaultPort: 80,
frontend-1  |       protocol: 'http:',
frontend-1  |       options: [Object: null prototype],
frontend-1  |       requests: [Object: null prototype] {},
frontend-1  |       sockets: [Object: null prototype],
frontend-1  |       freeSockets: [Object: null prototype] {},
frontend-1  |       keepAliveMsecs: 1000,
frontend-1  |       keepAlive: false,
frontend-1  |       maxSockets: Infinity,
frontend-1  |       maxFreeSockets: 256,
frontend-1  |       scheduling: 'lifo',
frontend-1  |       maxTotalSockets: Infinity,
frontend-1  |       totalSocketCount: 1,
frontend-1  |       [Symbol(kCapture)]: false
frontend-1  |     },
frontend-1  |     socketPath: undefined,
frontend-1  |     method: 'GET',
frontend-1  |     maxHeaderSize: undefined,
frontend-1  |     insecureHTTPParser: undefined,
frontend-1  |     joinDuplicateHeaders: undefined,
frontend-1  |     path: '/api/v1/books?page=1&limit=10',
frontend-1  |     _ended: true,
frontend-1  |     res: IncomingMessage {
frontend-1  |       _readableState: [ReadableState],
frontend-1  |       _events: [Object: null prototype],
frontend-1  |       _eventsCount: 4,
frontend-1  |       _maxListeners: undefined,
frontend-1  |       socket: [Socket],
frontend-1  |       httpVersionMajor: 1,
frontend-1  |       httpVersionMinor: 1,
frontend-1  |       httpVersion: '1.1',
frontend-1  |       complete: true,
frontend-1  |       rawHeaders: [Array],
frontend-1  |       rawTrailers: [],
frontend-1  |       joinDuplicateHeaders: undefined,
frontend-1  |       aborted: false,
frontend-1  |       upgrade: false,
frontend-1  |       url: '',
frontend-1  |       method: null,
frontend-1  |       statusCode: 200,
frontend-1  |       statusMessage: 'OK',
frontend-1  |       client: [Socket],
frontend-1  |       _consuming: false,
frontend-1  |       _dumped: false,
frontend-1  |       req: [Circular *1],
frontend-1  |       responseUrl: 'http://backend:5000/api/v1/books?page=1&limit=10',
frontend-1  |       redirects: [],
frontend-1  |       [Symbol(kCapture)]: false,
frontend-1  |       [Symbol(kHeaders)]: [Object],
frontend-1  |       [Symbol(kHeadersCount)]: 12,
frontend-1  |       [Symbol(kTrailers)]: null,
frontend-1  |       [Symbol(kTrailersCount)]: 0
frontend-1  |     },
frontend-1  |     aborted: false,
frontend-1  |     timeoutCb: null,
frontend-1  |     upgradeOrConnect: false,
frontend-1  |     parser: null,
frontend-1  |     maxHeadersCount: null,
frontend-1  |     reusedSocket: false,
frontend-1  |     host: 'backend',
frontend-1  |     protocol: 'http:',
frontend-1  |     _redirectable: Writable {
frontend-1  |       _writableState: [WritableState],
frontend-1  |       _events: [Object: null prototype],
frontend-1  |       _eventsCount: 3,
frontend-1  |       _maxListeners: undefined,
frontend-1  |       _options: [Object],
frontend-1  |       _ended: true,
frontend-1  |       _ending: true,
frontend-1  |       _redirectCount: 0,
frontend-1  |       _redirects: [],
frontend-1  |       _requestBodyLength: 0,
frontend-1  |       _requestBodyBuffers: [],
frontend-1  |       _onNativeResponse: [Function (anonymous)],
frontend-1  |       _currentRequest: [Circular *1],
frontend-1  |       _currentUrl: 'http://backend:5000/api/v1/books?page=1&limit=10',
frontend-1  |       [Symbol(kCapture)]: false
frontend-1  |     },
frontend-1  |     [Symbol(kCapture)]: false,
frontend-1  |     [Symbol(kBytesWritten)]: 0,
frontend-1  |     [Symbol(kNeedDrain)]: false,
frontend-1  |     [Symbol(corked)]: 0,
frontend-1  |     [Symbol(kOutHeaders)]: [Object: null prototype] {
frontend-1  |       accept: [Array],
frontend-1  |       'content-type': [Array],
frontend-1  |       'user-agent': [Array],
frontend-1  |       'accept-encoding': [Array],
frontend-1  |       host: [Array]
frontend-1  |     },
frontend-1  |     [Symbol(errored)]: null,
frontend-1  |     [Symbol(kHighWaterMark)]: 16384,
frontend-1  |     [Symbol(kRejectNonStandardBodyWrites)]: false,
frontend-1  |     [Symbol(kUniqueHeaders)]: null
frontend-1  |   },
frontend-1  |   data: {
frontend-1  |     books: [
frontend-1  |       [Object], [Object],
frontend-1  |       [Object], [Object],
frontend-1  |       [Object], [Object],
frontend-1  |       [Object], [Object],
frontend-1  |       [Object], [Object]
frontend-1  |     ],
frontend-1  |     pagination_metadata: {
frontend-1  |       current_page: 1,
frontend-1  |       page_size: 10,
frontend-1  |       total_books: 502,
frontend-1  |       total_pages: 51
frontend-1  |     }
frontend-1  |   }
frontend-1  | }
frontend-1  | getAllBooks response: {
frontend-1  |   status: 200,
frontend-1  |   statusText: 'OK',
frontend-1  |   headers: Object [AxiosHeaders] {
frontend-1  |     server: 'Werkzeug/3.0.2 Python/3.9.23',
frontend-1  |     date: 'Mon, 16 Jun 2025 19:12:16 GMT',
frontend-1  |     'content-type': 'application/json',
frontend-1  |     'content-length': '3325',
frontend-1  |     'access-control-allow-origin': '*',
frontend-1  |     connection: 'close'
frontend-1  |   },
frontend-1  |   config: {
frontend-1  |     transitional: {
frontend-1  |       silentJSONParsing: true,
frontend-1  |       forcedJSONParsing: true,
frontend-1  |       clarifyTimeoutError: false
frontend-1  |     },
frontend-1  |     adapter: [ 'xhr', 'http', 'fetch' ],
frontend-1  |     transformRequest: [ [Function (anonymous)] ],
frontend-1  |     transformResponse: [ [Function (anonymous)] ],
frontend-1  |     timeout: 0,
frontend-1  |     xsrfCookieName: 'XSRF-TOKEN',
frontend-1  |     xsrfHeaderName: 'X-XSRF-TOKEN',
frontend-1  |     maxContentLength: -1,
frontend-1  |     maxBodyLength: -1,
frontend-1  |     env: { FormData: [Function [FormData]], Blob: [class Blob] },
frontend-1  |     validateStatus: [Function: validateStatus],
frontend-1  |     headers: Object [AxiosHeaders] {
frontend-1  |       Accept: 'application/json, text/plain, */*',
frontend-1  |       'Content-Type': 'application/json',
frontend-1  |       'User-Agent': 'axios/1.10.0',
frontend-1  |       'Accept-Encoding': 'gzip, compress, deflate, br'
frontend-1  |     },
frontend-1  |     baseURL: 'http://backend:5000/api/v1',
frontend-1  |     params: { page: 1, limit: 10 },
frontend-1  |     method: 'get',
frontend-1  |     url: '/books',
frontend-1  |     allowAbsoluteUrls: true,
frontend-1  |     data: undefined
frontend-1  |   },
frontend-1  |   request: <ref *1> ClientRequest {
frontend-1  |     _events: [Object: null prototype] {
frontend-1  |       abort: [Function (anonymous)],
frontend-1  |       aborted: [Function (anonymous)],
frontend-1  |       connect: [Function (anonymous)],
frontend-1  |       error: [Function (anonymous)],
frontend-1  |       socket: [Function (anonymous)],
frontend-1  |       timeout: [Function (anonymous)],
frontend-1  |       finish: [Function: requestOnFinish]
frontend-1  |     },
frontend-1  |     _eventsCount: 7,
frontend-1  |     _maxListeners: undefined,
frontend-1  |     outputData: [],
frontend-1  |     outputSize: 0,
frontend-1  |     writable: true,
frontend-1  |     destroyed: false,
frontend-1  |     _last: true,
frontend-1  |     chunkedEncoding: false,
frontend-1  |     shouldKeepAlive: false,
frontend-1  |     maxRequestsOnConnectionReached: false,
frontend-1  |     _defaultKeepAlive: true,
frontend-1  |     useChunkedEncodingByDefault: false,
frontend-1  |     sendDate: false,
frontend-1  |     _removedConnection: false,
frontend-1  |     _removedContLen: false,
frontend-1  |     _removedTE: false,
frontend-1  |     strictContentLength: false,
frontend-1  |     _contentLength: 0,
frontend-1  |     _hasBody: true,
frontend-1  |     _trailer: '',
frontend-1  |     finished: true,
frontend-1  |     _headerSent: true,
frontend-1  |     _closed: false,
frontend-1  |     socket: Socket {
frontend-1  |       connecting: false,
frontend-1  |       _hadError: false,
frontend-1  |       _parent: null,
frontend-1  |       _host: 'backend',
frontend-1  |       _closeAfterHandlingError: false,
frontend-1  |       _readableState: [ReadableState],
frontend-1  |       _events: [Object: null prototype],
frontend-1  |       _eventsCount: 7,
frontend-1  |       _maxListeners: undefined,
frontend-1  |       _writableState: [WritableState],
frontend-1  |       allowHalfOpen: false,
frontend-1  |       _sockname: null,
frontend-1  |       _pendingData: null,
frontend-1  |       _pendingEncoding: '',
frontend-1  |       server: null,
frontend-1  |       _server: null,
frontend-1  |       parser: null,
frontend-1  |       _httpMessage: [Circular *1],
frontend-1  |       [Symbol(async_id_symbol)]: 254,
frontend-1  |       [Symbol(kHandle)]: [TCP],
frontend-1  |       [Symbol(lastWriteQueueSize)]: 0,
frontend-1  |       [Symbol(timeout)]: null,
frontend-1  |       [Symbol(kBuffer)]: null,
frontend-1  |       [Symbol(kBufferCb)]: null,
frontend-1  |       [Symbol(kBufferGen)]: null,
frontend-1  |       [Symbol(kCapture)]: false,
frontend-1  |       [Symbol(kSetNoDelay)]: true,
frontend-1  |       [Symbol(kSetKeepAlive)]: true,
frontend-1  |       [Symbol(kSetKeepAliveInitialDelay)]: 60,
frontend-1  |       [Symbol(kBytesRead)]: 0,
frontend-1  |       [Symbol(kBytesWritten)]: 0
frontend-1  |     },
frontend-1  |     _header: 'GET /api/v1/books?page=1&limit=10 HTTP/1.1\r\n' +
frontend-1  |       'Accept: application/json, text/plain, */*\r\n' +
frontend-1  |       'Content-Type: application/json\r\n' +
frontend-1  |       'User-Agent: axios/1.10.0\r\n' +
frontend-1  |       'Accept-Encoding: gzip, compress, deflate, br\r\n' +
frontend-1  |       'Host: backend:5000\r\n' +
frontend-1  |       'Connection: close\r\n' +
frontend-1  |       '\r\n',
frontend-1  |     _keepAliveTimeout: 0,
frontend-1  |     _onPendingData: [Function: nop],
frontend-1  |     agent: Agent {
frontend-1  |       _events: [Object: null prototype],
frontend-1  |       _eventsCount: 2,
frontend-1  |       _maxListeners: undefined,
frontend-1  |       defaultPort: 80,
frontend-1  |       protocol: 'http:',
frontend-1  |       options: [Object: null prototype],
frontend-1  |       requests: [Object: null prototype] {},
frontend-1  |       sockets: [Object: null prototype],
frontend-1  |       freeSockets: [Object: null prototype] {},
frontend-1  |       keepAliveMsecs: 1000,
frontend-1  |       keepAlive: false,
frontend-1  |       maxSockets: Infinity,
frontend-1  |       maxFreeSockets: 256,
frontend-1  |       scheduling: 'lifo',
frontend-1  |       maxTotalSockets: Infinity,
frontend-1  |       totalSocketCount: 1,
frontend-1  |       [Symbol(kCapture)]: false
frontend-1  |     },
frontend-1  |     socketPath: undefined,
frontend-1  |     method: 'GET',
frontend-1  |     maxHeaderSize: undefined,
frontend-1  |     insecureHTTPParser: undefined,
frontend-1  |     joinDuplicateHeaders: undefined,
frontend-1  |     path: '/api/v1/books?page=1&limit=10',
frontend-1  |     _ended: true,
frontend-1  |     res: IncomingMessage {
frontend-1  |       _readableState: [ReadableState],
frontend-1  |       _events: [Object: null prototype],
frontend-1  |       _eventsCount: 4,
frontend-1  |       _maxListeners: undefined,
frontend-1  |       socket: [Socket],
frontend-1  |       httpVersionMajor: 1,
frontend-1  |       httpVersionMinor: 1,
frontend-1  |       httpVersion: '1.1',
frontend-1  |       complete: true,
frontend-1  |       rawHeaders: [Array],
frontend-1  |       rawTrailers: [],
frontend-1  |       joinDuplicateHeaders: undefined,
frontend-1  |       aborted: false,
frontend-1  |       upgrade: false,
frontend-1  |       url: '',
frontend-1  |       method: null,
frontend-1  |       statusCode: 200,
frontend-1  |       statusMessage: 'OK',
frontend-1  |       client: [Socket],
frontend-1  |       _consuming: false,
frontend-1  |       _dumped: false,
frontend-1  |       req: [Circular *1],
frontend-1  |       responseUrl: 'http://backend:5000/api/v1/books?page=1&limit=10',
frontend-1  |       redirects: [],
frontend-1  |       [Symbol(kCapture)]: false,
frontend-1  |       [Symbol(kHeaders)]: [Object],
frontend-1  |       [Symbol(kHeadersCount)]: 12,
frontend-1  |       [Symbol(kTrailers)]: null,
frontend-1  |       [Symbol(kTrailersCount)]: 0
frontend-1  |     },
frontend-1  |     aborted: false,
frontend-1  |     timeoutCb: null,
frontend-1  |     upgradeOrConnect: false,
frontend-1  |     parser: null,
frontend-1  |     maxHeadersCount: null,
frontend-1  |     reusedSocket: false,
frontend-1  |     host: 'backend',
frontend-1  |     protocol: 'http:',
frontend-1  |     _redirectable: Writable {
frontend-1  |       _writableState: [WritableState],
frontend-1  |       _events: [Object: null prototype],
frontend-1  |       _eventsCount: 3,
frontend-1  |       _maxListeners: undefined,
frontend-1  |       _options: [Object],
frontend-1  |       _ended: true,
frontend-1  |       _ending: true,
frontend-1  |       _redirectCount: 0,
frontend-1  |       _redirects: [],
frontend-1  |       _requestBodyLength: 0,
frontend-1  |       _requestBodyBuffers: [],
frontend-1  |       _onNativeResponse: [Function (anonymous)],
frontend-1  |       _currentRequest: [Circular *1],
frontend-1  |       _currentUrl: 'http://backend:5000/api/v1/books?page=1&limit=10',
frontend-1  |       [Symbol(kCapture)]: false
frontend-1  |     },
frontend-1  |     [Symbol(kCapture)]: false,
frontend-1  |     [Symbol(kBytesWritten)]: 0,
frontend-1  |     [Symbol(kNeedDrain)]: false,
frontend-1  |     [Symbol(corked)]: 0,
frontend-1  |     [Symbol(kOutHeaders)]: [Object: null prototype] {
frontend-1  |       accept: [Array],
frontend-1  |       'content-type': [Array],
frontend-1  |       'user-agent': [Array],
frontend-1  |       'accept-encoding': [Array],
frontend-1  |       host: [Array]
frontend-1  |     },
frontend-1  |     [Symbol(errored)]: null,
frontend-1  |     [Symbol(kHighWaterMark)]: 16384,
frontend-1  |     [Symbol(kRejectNonStandardBodyWrites)]: false,
frontend-1  |     [Symbol(kUniqueHeaders)]: null
frontend-1  |   },
frontend-1  |   data: {
frontend-1  |     books: [
frontend-1  |       [Object], [Object],
frontend-1  |       [Object], [Object],
frontend-1  |       [Object], [Object],
frontend-1  |       [Object], [Object],
frontend-1  |       [Object], [Object]
frontend-1  |     ],
frontend-1  |     pagination_metadata: {
frontend-1  |       current_page: 1,
frontend-1  |       page_size: 10,
frontend-1  |       total_books: 502,
frontend-1  |       total_pages: 51
frontend-1  |     }
frontend-1  |   }
frontend-1  | }
frontend-1  | API Response: {
frontend-1  |   status: 200,
frontend-1  |   statusText: 'OK',
frontend-1  |   headers: Object [AxiosHeaders] {
frontend-1  |     server: 'Werkzeug/3.0.2 Python/3.9.23',
frontend-1  |     date: 'Mon, 16 Jun 2025 19:12:16 GMT',
frontend-1  |     'content-type': 'application/json',
frontend-1  |     'content-length': '3325',
frontend-1  |     'access-control-allow-origin': '*',
frontend-1  |     connection: 'close'
frontend-1  |   },
frontend-1  |   config: {
frontend-1  |     transitional: {
frontend-1  |       silentJSONParsing: true,
frontend-1  |       forcedJSONParsing: true,
frontend-1  |       clarifyTimeoutError: false
frontend-1  |     },
frontend-1  |     adapter: [ 'xhr', 'http', 'fetch' ],
frontend-1  |     transformRequest: [ [Function (anonymous)] ],
frontend-1  |     transformResponse: [ [Function (anonymous)] ],
frontend-1  |     timeout: 0,
frontend-1  |     xsrfCookieName: 'XSRF-TOKEN',
frontend-1  |     xsrfHeaderName: 'X-XSRF-TOKEN',
frontend-1  |     maxContentLength: -1,
frontend-1  |     maxBodyLength: -1,
frontend-1  |     env: { FormData: [Function [FormData]], Blob: [class Blob] },
frontend-1  |     validateStatus: [Function: validateStatus],
frontend-1  |     headers: Object [AxiosHeaders] {
frontend-1  |       Accept: 'application/json, text/plain, */*',
frontend-1  |       'Content-Type': 'application/json',
frontend-1  |       'User-Agent': 'axios/1.10.0',
frontend-1  |       'Accept-Encoding': 'gzip, compress, deflate, br'
frontend-1  |     },
frontend-1  |     baseURL: 'http://backend:5000/api/v1',
frontend-1  |     params: { page: 1, limit: 10 },
frontend-1  |     method: 'get',
frontend-1  |     url: '/books',
frontend-1  |     allowAbsoluteUrls: true,
frontend-1  |     data: undefined
frontend-1  |   },
frontend-1  |   request: <ref *1> ClientRequest {
frontend-1  |     _events: [Object: null prototype] {
frontend-1  |       abort: [Function (anonymous)],
frontend-1  |       aborted: [Function (anonymous)],
frontend-1  |       connect: [Function (anonymous)],
frontend-1  |       error: [Function (anonymous)],
frontend-1  |       socket: [Function (anonymous)],
frontend-1  |       timeout: [Function (anonymous)],
frontend-1  |       finish: [Function: requestOnFinish]
frontend-1  |     },
frontend-1  |     _eventsCount: 7,
frontend-1  |     _maxListeners: undefined,
frontend-1  |     outputData: [],
frontend-1  |     outputSize: 0,
frontend-1  |     writable: true,
frontend-1  |     destroyed: false,
frontend-1  |     _last: true,
frontend-1  |     chunkedEncoding: false,
frontend-1  |     shouldKeepAlive: false,
frontend-1  |     maxRequestsOnConnectionReached: false,
frontend-1  |     _defaultKeepAlive: true,
frontend-1  |     useChunkedEncodingByDefault: false,
frontend-1  |     sendDate: false,
frontend-1  |     _removedConnection: false,
frontend-1  |     _removedContLen: false,
frontend-1  |     _removedTE: false,
frontend-1  |     strictContentLength: false,
frontend-1  |     _contentLength: 0,
frontend-1  |     _hasBody: true,
frontend-1  |     _trailer: '',
frontend-1  |     finished: true,
frontend-1  |     _headerSent: true,
frontend-1  |     _closed: false,
frontend-1  |     socket: Socket {
frontend-1  |       connecting: false,
frontend-1  |       _hadError: false,
frontend-1  |       _parent: null,
frontend-1  |       _host: 'backend',
frontend-1  |       _closeAfterHandlingError: false,
frontend-1  |       _readableState: [ReadableState],
frontend-1  |       _events: [Object: null prototype],
frontend-1  |       _eventsCount: 7,
frontend-1  |       _maxListeners: undefined,
frontend-1  |       _writableState: [WritableState],
frontend-1  |       allowHalfOpen: false,
frontend-1  |       _sockname: null,
frontend-1  |       _pendingData: null,
frontend-1  |       _pendingEncoding: '',
frontend-1  |       server: null,
frontend-1  |       _server: null,
frontend-1  |       parser: null,
frontend-1  |       _httpMessage: [Circular *1],
frontend-1  |       [Symbol(async_id_symbol)]: 294,
frontend-1  |       [Symbol(kHandle)]: [TCP],
frontend-1  |       [Symbol(lastWriteQueueSize)]: 0,
frontend-1  |       [Symbol(timeout)]: null,
frontend-1  |       [Symbol(kBuffer)]: null,
frontend-1  |       [Symbol(kBufferCb)]: null,
frontend-1  |       [Symbol(kBufferGen)]: null,
frontend-1  |       [Symbol(kCapture)]: false,
frontend-1  |       [Symbol(kSetNoDelay)]: true,
frontend-1  |       [Symbol(kSetKeepAlive)]: true,
frontend-1  |       [Symbol(kSetKeepAliveInitialDelay)]: 60,
frontend-1  |       [Symbol(kBytesRead)]: 0,
frontend-1  |       [Symbol(kBytesWritten)]: 0
frontend-1  |     },
frontend-1  |     _header: 'GET /api/v1/books?page=1&limit=10 HTTP/1.1\r\n' +
frontend-1  |       'Accept: application/json, text/plain, */*\r\n' +
frontend-1  |       'Content-Type: application/json\r\n' +
frontend-1  |       'User-Agent: axios/1.10.0\r\n' +
frontend-1  |       'Accept-Encoding: gzip, compress, deflate, br\r\n' +
frontend-1  |       'Host: backend:5000\r\n' +
frontend-1  |       'Connection: close\r\n' +
frontend-1  |       '\r\n',
frontend-1  |     _keepAliveTimeout: 0,
frontend-1  |     _onPendingData: [Function: nop],
frontend-1  |     agent: Agent {
frontend-1  |       _events: [Object: null prototype],
frontend-1  |       _eventsCount: 2,
frontend-1  |       _maxListeners: undefined,
frontend-1  |       defaultPort: 80,
frontend-1  |       protocol: 'http:',
frontend-1  |       options: [Object: null prototype],
frontend-1  |       requests: [Object: null prototype] {},
frontend-1  |       sockets: [Object: null prototype],
frontend-1  |       freeSockets: [Object: null prototype] {},
frontend-1  |       keepAliveMsecs: 1000,
frontend-1  |       keepAlive: false,
frontend-1  |       maxSockets: Infinity,
frontend-1  |       maxFreeSockets: 256,
frontend-1  |       scheduling: 'lifo',
frontend-1  |       maxTotalSockets: Infinity,
frontend-1  |       totalSocketCount: 1,
frontend-1  |       [Symbol(kCapture)]: false
frontend-1  |     },
frontend-1  |     socketPath: undefined,
frontend-1  |     method: 'GET',
frontend-1  |     maxHeaderSize: undefined,
frontend-1  |     insecureHTTPParser: undefined,
frontend-1  |     joinDuplicateHeaders: undefined,
frontend-1  |     path: '/api/v1/books?page=1&limit=10',
frontend-1  |     _ended: true,
frontend-1  |     res: IncomingMessage {
frontend-1  |       _readableState: [ReadableState],
frontend-1  |       _events: [Object: null prototype],
frontend-1  |       _eventsCount: 4,
frontend-1  |       _maxListeners: undefined,
frontend-1  |       socket: [Socket],
frontend-1  |       httpVersionMajor: 1,
frontend-1  |       httpVersionMinor: 1,
frontend-1  |       httpVersion: '1.1',
frontend-1  |       complete: true,
frontend-1  |       rawHeaders: [Array],
frontend-1  |       rawTrailers: [],
frontend-1  |       joinDuplicateHeaders: undefined,
frontend-1  |       aborted: false,
frontend-1  |       upgrade: false,
frontend-1  |       url: '',
frontend-1  |       method: null,
frontend-1  |       statusCode: 200,
frontend-1  |       statusMessage: 'OK',
frontend-1  |       client: [Socket],
frontend-1  |       _consuming: false,
frontend-1  |       _dumped: false,
frontend-1  |       req: [Circular *1],
frontend-1  |       responseUrl: 'http://backend:5000/api/v1/books?page=1&limit=10',
frontend-1  |       redirects: [],
frontend-1  |       [Symbol(kCapture)]: false,
frontend-1  |       [Symbol(kHeaders)]: [Object],
frontend-1  |       [Symbol(kHeadersCount)]: 12,
frontend-1  |       [Symbol(kTrailers)]: null,
frontend-1  |       [Symbol(kTrailersCount)]: 0
frontend-1  |     },
frontend-1  |     aborted: false,
frontend-1  |     timeoutCb: null,
frontend-1  |     upgradeOrConnect: false,
frontend-1  |     parser: null,
frontend-1  |     maxHeadersCount: null,
frontend-1  |     reusedSocket: false,
frontend-1  |     host: 'backend',
frontend-1  |     protocol: 'http:',
frontend-1  |     _redirectable: Writable {
frontend-1  |       _writableState: [WritableState],
frontend-1  |       _events: [Object: null prototype],
frontend-1  |       _eventsCount: 3,
frontend-1  |       _maxListeners: undefined,
frontend-1  |       _options: [Object],
frontend-1  |       _ended: true,
frontend-1  |       _ending: true,
frontend-1  |       _redirectCount: 0,
frontend-1  |       _redirects: [],
frontend-1  |       _requestBodyLength: 0,
frontend-1  |       _requestBodyBuffers: [],
frontend-1  |       _onNativeResponse: [Function (anonymous)],
frontend-1  |       _currentRequest: [Circular *1],
frontend-1  |       _currentUrl: 'http://backend:5000/api/v1/books?page=1&limit=10',
frontend-1  |       [Symbol(kCapture)]: false
frontend-1  |     },
frontend-1  |     [Symbol(kCapture)]: false,
frontend-1  |     [Symbol(kBytesWritten)]: 0,
frontend-1  |     [Symbol(kNeedDrain)]: false,
frontend-1  |     [Symbol(corked)]: 0,
frontend-1  |     [Symbol(kOutHeaders)]: [Object: null prototype] {
frontend-1  |       accept: [Array],
frontend-1  |       'content-type': [Array],
frontend-1  |       'user-agent': [Array],
frontend-1  |       'accept-encoding': [Array],
frontend-1  |       host: [Array]
frontend-1  |     },
frontend-1  |     [Symbol(errored)]: null,
frontend-1  |     [Symbol(kHighWaterMark)]: 16384,
frontend-1  |     [Symbol(kRejectNonStandardBodyWrites)]: false,
frontend-1  |     [Symbol(kUniqueHeaders)]: null
frontend-1  |   },
frontend-1  |   data: {
frontend-1  |     books: [
frontend-1  |       [Object], [Object],
frontend-1  |       [Object], [Object],
frontend-1  |       [Object], [Object],
frontend-1  |       [Object], [Object],
frontend-1  |       [Object], [Object]
frontend-1  |     ],
frontend-1  |     pagination_metadata: {
frontend-1  |       current_page: 1,
frontend-1  |       page_size: 10,
frontend-1  |       total_books: 502,
frontend-1  |       total_pages: 51
frontend-1  |     }
frontend-1  |   }
frontend-1  | }
frontend-1  | getAllBooks response: {
frontend-1  |   status: 200,
frontend-1  |   statusText: 'OK',
frontend-1  |   headers: Object [AxiosHeaders] {
frontend-1  |     server: 'Werkzeug/3.0.2 Python/3.9.23',
frontend-1  |     date: 'Mon, 16 Jun 2025 19:12:16 GMT',
frontend-1  |     'content-type': 'application/json',
frontend-1  |     'content-length': '3325',
frontend-1  |     'access-control-allow-origin': '*',
frontend-1  |     connection: 'close'
frontend-1  |   },
frontend-1  |   config: {
frontend-1  |     transitional: {
frontend-1  |       silentJSONParsing: true,
frontend-1  |       forcedJSONParsing: true,
frontend-1  |       clarifyTimeoutError: false
frontend-1  |     },
frontend-1  |     adapter: [ 'xhr', 'http', 'fetch' ],
frontend-1  |     transformRequest: [ [Function (anonymous)] ],
frontend-1  |     transformResponse: [ [Function (anonymous)] ],
frontend-1  |     timeout: 0,
frontend-1  |     xsrfCookieName: 'XSRF-TOKEN',
frontend-1  |     xsrfHeaderName: 'X-XSRF-TOKEN',
frontend-1  |     maxContentLength: -1,
frontend-1  |     maxBodyLength: -1,
frontend-1  |     env: { FormData: [Function [FormData]], Blob: [class Blob] },
frontend-1  |     validateStatus: [Function: validateStatus],
frontend-1  |     headers: Object [AxiosHeaders] {
frontend-1  |       Accept: 'application/json, text/plain, */*',
frontend-1  |       'Content-Type': 'application/json',
frontend-1  |       'User-Agent': 'axios/1.10.0',
frontend-1  |       'Accept-Encoding': 'gzip, compress, deflate, br'
frontend-1  |     },
frontend-1  |     baseURL: 'http://backend:5000/api/v1',
frontend-1  |     params: { page: 1, limit: 10 },
frontend-1  |     method: 'get',
frontend-1  |     url: '/books',
frontend-1  |     allowAbsoluteUrls: true,
frontend-1  |     data: undefined
frontend-1  |   },
frontend-1  |   request: <ref *1> ClientRequest {
frontend-1  |     _events: [Object: null prototype] {
frontend-1  |       abort: [Function (anonymous)],
frontend-1  |       aborted: [Function (anonymous)],
frontend-1  |       connect: [Function (anonymous)],
frontend-1  |       error: [Function (anonymous)],
frontend-1  |       socket: [Function (anonymous)],
frontend-1  |       timeout: [Function (anonymous)],
frontend-1  |       finish: [Function: requestOnFinish]
frontend-1  |     },
frontend-1  |     _eventsCount: 7,
frontend-1  |     _maxListeners: undefined,
frontend-1  |     outputData: [],
frontend-1  |     outputSize: 0,
frontend-1  |     writable: true,
frontend-1  |     destroyed: false,
frontend-1  |     _last: true,
frontend-1  |     chunkedEncoding: false,
frontend-1  |     shouldKeepAlive: false,
frontend-1  |     maxRequestsOnConnectionReached: false,
frontend-1  |     _defaultKeepAlive: true,
frontend-1  |     useChunkedEncodingByDefault: false,
frontend-1  |     sendDate: false,
frontend-1  |     _removedConnection: false,
frontend-1  |     _removedContLen: false,
frontend-1  |     _removedTE: false,
frontend-1  |     strictContentLength: false,
frontend-1  |     _contentLength: 0,
frontend-1  |     _hasBody: true,
frontend-1  |     _trailer: '',
frontend-1  |     finished: true,
frontend-1  |     _headerSent: true,
frontend-1  |     _closed: false,
frontend-1  |     socket: Socket {
frontend-1  |       connecting: false,
frontend-1  |       _hadError: false,
frontend-1  |       _parent: null,
frontend-1  |       _host: 'backend',
frontend-1  |       _closeAfterHandlingError: false,
frontend-1  |       _readableState: [ReadableState],
frontend-1  |       _events: [Object: null prototype],
frontend-1  |       _eventsCount: 7,
frontend-1  |       _maxListeners: undefined,
frontend-1  |       _writableState: [WritableState],
frontend-1  |       allowHalfOpen: false,
frontend-1  |       _sockname: null,
frontend-1  |       _pendingData: null,
frontend-1  |       _pendingEncoding: '',
frontend-1  |       server: null,
frontend-1  |       _server: null,
frontend-1  |       parser: null,
frontend-1  |       _httpMessage: [Circular *1],
frontend-1  |       [Symbol(async_id_symbol)]: 294,
frontend-1  |       [Symbol(kHandle)]: [TCP],
frontend-1  |       [Symbol(lastWriteQueueSize)]: 0,
frontend-1  |       [Symbol(timeout)]: null,
frontend-1  |       [Symbol(kBuffer)]: null,
frontend-1  |       [Symbol(kBufferCb)]: null,
frontend-1  |       [Symbol(kBufferGen)]: null,
frontend-1  |       [Symbol(kCapture)]: false,
frontend-1  |       [Symbol(kSetNoDelay)]: true,
frontend-1  |       [Symbol(kSetKeepAlive)]: true,
frontend-1  |       [Symbol(kSetKeepAliveInitialDelay)]: 60,
frontend-1  |       [Symbol(kBytesRead)]: 0,
frontend-1  |       [Symbol(kBytesWritten)]: 0
frontend-1  |     },
frontend-1  |     _header: 'GET /api/v1/books?page=1&limit=10 HTTP/1.1\r\n' +
frontend-1  |       'Accept: application/json, text/plain, */*\r\n' +
frontend-1  |       'Content-Type: application/json\r\n' +
frontend-1  |       'User-Agent: axios/1.10.0\r\n' +
frontend-1  |       'Accept-Encoding: gzip, compress, deflate, br\r\n' +
frontend-1  |       'Host: backend:5000\r\n' +
frontend-1  |       'Connection: close\r\n' +
frontend-1  |       '\r\n',
frontend-1  |     _keepAliveTimeout: 0,
frontend-1  |     _onPendingData: [Function: nop],
frontend-1  |     agent: Agent {
frontend-1  |       _events: [Object: null prototype],
frontend-1  |       _eventsCount: 2,
frontend-1  |       _maxListeners: undefined,
frontend-1  |       defaultPort: 80,
frontend-1  |       protocol: 'http:',
frontend-1  |       options: [Object: null prototype],
frontend-1  |       requests: [Object: null prototype] {},
frontend-1  |       sockets: [Object: null prototype],
frontend-1  |       freeSockets: [Object: null prototype] {},
frontend-1  |       keepAliveMsecs: 1000,
frontend-1  |       keepAlive: false,
frontend-1  |       maxSockets: Infinity,
frontend-1  |       maxFreeSockets: 256,
frontend-1  |       scheduling: 'lifo',
frontend-1  |       maxTotalSockets: Infinity,
frontend-1  |       totalSocketCount: 1,
frontend-1  |       [Symbol(kCapture)]: false
frontend-1  |     },
frontend-1  |     socketPath: undefined,
frontend-1  |     method: 'GET',
frontend-1  |     maxHeaderSize: undefined,
frontend-1  |     insecureHTTPParser: undefined,
frontend-1  |     joinDuplicateHeaders: undefined,
frontend-1  |     path: '/api/v1/books?page=1&limit=10',
frontend-1  |     _ended: true,
frontend-1  |     res: IncomingMessage {
frontend-1  |       _readableState: [ReadableState],
frontend-1  |       _events: [Object: null prototype],
frontend-1  |       _eventsCount: 4,
frontend-1  |       _maxListeners: undefined,
frontend-1  |       socket: [Socket],
frontend-1  |       httpVersionMajor: 1,
frontend-1  |       httpVersionMinor: 1,
frontend-1  |       httpVersion: '1.1',
frontend-1  |       complete: true,
frontend-1  |       rawHeaders: [Array],
frontend-1  |       rawTrailers: [],
frontend-1  |       joinDuplicateHeaders: undefined,
frontend-1  |       aborted: false,
frontend-1  |       upgrade: false,
frontend-1  |       url: '',
frontend-1  |       method: null,
frontend-1  |       statusCode: 200,
frontend-1  |       statusMessage: 'OK',
frontend-1  |       client: [Socket],
frontend-1  |       _consuming: false,
frontend-1  |       _dumped: false,
frontend-1  |       req: [Circular *1],
frontend-1  |       responseUrl: 'http://backend:5000/api/v1/books?page=1&limit=10',
frontend-1  |       redirects: [],
frontend-1  |       [Symbol(kCapture)]: false,
frontend-1  |       [Symbol(kHeaders)]: [Object],
frontend-1  |       [Symbol(kHeadersCount)]: 12,
frontend-1  |       [Symbol(kTrailers)]: null,
frontend-1  |       [Symbol(kTrailersCount)]: 0
frontend-1  |     },
frontend-1  |     aborted: false,
frontend-1  |     timeoutCb: null,
frontend-1  |     upgradeOrConnect: false,
frontend-1  |     parser: null,
frontend-1  |     maxHeadersCount: null,
frontend-1  |     reusedSocket: false,
frontend-1  |     host: 'backend',
frontend-1  |     protocol: 'http:',
frontend-1  |     _redirectable: Writable {
frontend-1  |       _writableState: [WritableState],
frontend-1  |       _events: [Object: null prototype],
frontend-1  |       _eventsCount: 3,
frontend-1  |       _maxListeners: undefined,
frontend-1  |       _options: [Object],
frontend-1  |       _ended: true,
frontend-1  |       _ending: true,
frontend-1  |       _redirectCount: 0,
frontend-1  |       _redirects: [],
frontend-1  |       _requestBodyLength: 0,
frontend-1  |       _requestBodyBuffers: [],
frontend-1  |       _onNativeResponse: [Function (anonymous)],
frontend-1  |       _currentRequest: [Circular *1],
frontend-1  |       _currentUrl: 'http://backend:5000/api/v1/books?page=1&limit=10',
frontend-1  |       [Symbol(kCapture)]: false
frontend-1  |     },
frontend-1  |     [Symbol(kCapture)]: false,
frontend-1  |     [Symbol(kBytesWritten)]: 0,
frontend-1  |     [Symbol(kNeedDrain)]: false,
frontend-1  |     [Symbol(corked)]: 0,
frontend-1  |     [Symbol(kOutHeaders)]: [Object: null prototype] {
frontend-1  |       accept: [Array],
frontend-1  |       'content-type': [Array],
frontend-1  |       'user-agent': [Array],
frontend-1  |       'accept-encoding': [Array],
frontend-1  |       host: [Array]
frontend-1  |     },
frontend-1  |     [Symbol(errored)]: null,
frontend-1  |     [Symbol(kHighWaterMark)]: 16384,
frontend-1  |     [Symbol(kRejectNonStandardBodyWrites)]: false,
frontend-1  |     [Symbol(kUniqueHeaders)]: null
frontend-1  |   },
frontend-1  |   data: {
frontend-1  |     books: [
frontend-1  |       [Object], [Object],
frontend-1  |       [Object], [Object],
frontend-1  |       [Object], [Object],
frontend-1  |       [Object], [Object],
frontend-1  |       [Object], [Object]
frontend-1  |     ],
frontend-1  |     pagination_metadata: {
frontend-1  |       current_page: 1,
frontend-1  |       page_size: 10,
frontend-1  |       total_books: 502,
frontend-1  |       total_pages: 51
frontend-1  |     }
frontend-1  |   }
frontend-1  | }
frontend-1  | API Response: {
frontend-1  |   status: 200,
frontend-1  |   statusText: 'OK',
frontend-1  |   headers: Object [AxiosHeaders] {
frontend-1  |     server: 'Werkzeug/3.0.2 Python/3.9.23',
frontend-1  |     date: 'Mon, 16 Jun 2025 19:12:18 GMT',
frontend-1  |     'content-type': 'application/json',
frontend-1  |     'content-length': '3325',
frontend-1  |     'access-control-allow-origin': '*',
frontend-1  |     connection: 'close'
frontend-1  |   },
frontend-1  |   config: {
frontend-1  |     transitional: {
frontend-1  |       silentJSONParsing: true,
frontend-1  |       forcedJSONParsing: true,
frontend-1  |       clarifyTimeoutError: false
frontend-1  |     },
frontend-1  |     adapter: [ 'xhr', 'http', 'fetch' ],
frontend-1  |     transformRequest: [ [Function (anonymous)] ],
frontend-1  |     transformResponse: [ [Function (anonymous)] ],
frontend-1  |     timeout: 0,
frontend-1  |     xsrfCookieName: 'XSRF-TOKEN',
frontend-1  |     xsrfHeaderName: 'X-XSRF-TOKEN',
frontend-1  |     maxContentLength: -1,
frontend-1  |     maxBodyLength: -1,
frontend-1  |     env: { FormData: [Function [FormData]], Blob: [class Blob] },
frontend-1  |     validateStatus: [Function: validateStatus],
frontend-1  |     headers: Object [AxiosHeaders] {
frontend-1  |       Accept: 'application/json, text/plain, */*',
frontend-1  |       'Content-Type': 'application/json',
frontend-1  |       'User-Agent': 'axios/1.10.0',
frontend-1  |       'Accept-Encoding': 'gzip, compress, deflate, br'
frontend-1  |     },
frontend-1  |     baseURL: 'http://backend:5000/api/v1',
frontend-1  |     params: { page: 1, limit: 10 },
frontend-1  |     method: 'get',
frontend-1  |     url: '/books',
frontend-1  |     allowAbsoluteUrls: true,
frontend-1  |     data: undefined
frontend-1  |   },
frontend-1  |   request: <ref *1> ClientRequest {
frontend-1  |     _events: [Object: null prototype] {
frontend-1  |       abort: [Function (anonymous)],
frontend-1  |       aborted: [Function (anonymous)],
frontend-1  |       connect: [Function (anonymous)],
frontend-1  |       error: [Function (anonymous)],
frontend-1  |       socket: [Function (anonymous)],
frontend-1  |       timeout: [Function (anonymous)],
frontend-1  |       finish: [Function: requestOnFinish]
frontend-1  |     },
frontend-1  |     _eventsCount: 7,
frontend-1  |     _maxListeners: undefined,
frontend-1  |     outputData: [],
frontend-1  |     outputSize: 0,
frontend-1  |     writable: true,
frontend-1  |     destroyed: false,
frontend-1  |     _last: true,
frontend-1  |     chunkedEncoding: false,
frontend-1  |     shouldKeepAlive: false,
frontend-1  |     maxRequestsOnConnectionReached: false,
frontend-1  |     _defaultKeepAlive: true,
frontend-1  |     useChunkedEncodingByDefault: false,
frontend-1  |     sendDate: false,
frontend-1  |     _removedConnection: false,
frontend-1  |     _removedContLen: false,
frontend-1  |     _removedTE: false,
frontend-1  |     strictContentLength: false,
frontend-1  |     _contentLength: 0,
frontend-1  |     _hasBody: true,
frontend-1  |     _trailer: '',
frontend-1  |     finished: true,
frontend-1  |     _headerSent: true,
frontend-1  |     _closed: false,
frontend-1  |     socket: Socket {
frontend-1  |       connecting: false,
frontend-1  |       _hadError: false,
frontend-1  |       _parent: null,
frontend-1  |       _host: 'backend',
frontend-1  |       _closeAfterHandlingError: false,
frontend-1  |       _readableState: [ReadableState],
frontend-1  |       _events: [Object: null prototype],
frontend-1  |       _eventsCount: 7,
frontend-1  |       _maxListeners: undefined,
frontend-1  |       _writableState: [WritableState],
frontend-1  |       allowHalfOpen: false,
frontend-1  |       _sockname: null,
frontend-1  |       _pendingData: null,
frontend-1  |       _pendingEncoding: '',
frontend-1  |       server: null,
frontend-1  |       _server: null,
frontend-1  |       parser: null,
frontend-1  |       _httpMessage: [Circular *1],
frontend-1  |       [Symbol(async_id_symbol)]: 1460,
frontend-1  |       [Symbol(kHandle)]: [TCP],
frontend-1  |       [Symbol(lastWriteQueueSize)]: 0,
frontend-1  |       [Symbol(timeout)]: null,
frontend-1  |       [Symbol(kBuffer)]: null,
frontend-1  |       [Symbol(kBufferCb)]: null,
frontend-1  |       [Symbol(kBufferGen)]: null,
frontend-1  |       [Symbol(kCapture)]: false,
frontend-1  |       [Symbol(kSetNoDelay)]: true,
frontend-1  |       [Symbol(kSetKeepAlive)]: true,
frontend-1  |       [Symbol(kSetKeepAliveInitialDelay)]: 60,
frontend-1  |       [Symbol(kBytesRead)]: 0,
frontend-1  |       [Symbol(kBytesWritten)]: 0
frontend-1  |     },
frontend-1  |     _header: 'GET /api/v1/books?page=1&limit=10 HTTP/1.1\r\n' +
frontend-1  |       'Accept: application/json, text/plain, */*\r\n' +
frontend-1  |       'Content-Type: application/json\r\n' +
frontend-1  |       'User-Agent: axios/1.10.0\r\n' +
frontend-1  |       'Accept-Encoding: gzip, compress, deflate, br\r\n' +
frontend-1  |       'Host: backend:5000\r\n' +
frontend-1  |       'Connection: close\r\n' +
frontend-1  |       '\r\n',
frontend-1  |     _keepAliveTimeout: 0,
frontend-1  |     _onPendingData: [Function: nop],
frontend-1  |     agent: Agent {
frontend-1  |       _events: [Object: null prototype],
frontend-1  |       _eventsCount: 2,
frontend-1  |       _maxListeners: undefined,
frontend-1  |       defaultPort: 80,
frontend-1  |       protocol: 'http:',
frontend-1  |       options: [Object: null prototype],
frontend-1  |       requests: [Object: null prototype] {},
frontend-1  |       sockets: [Object: null prototype],
frontend-1  |       freeSockets: [Object: null prototype] {},
frontend-1  |       keepAliveMsecs: 1000,
frontend-1  |       keepAlive: false,
frontend-1  |       maxSockets: Infinity,
frontend-1  |       maxFreeSockets: 256,
frontend-1  |       scheduling: 'lifo',
frontend-1  |       maxTotalSockets: Infinity,
frontend-1  |       totalSocketCount: 1,
frontend-1  |       [Symbol(kCapture)]: false
frontend-1  |     },
frontend-1  |     socketPath: undefined,
frontend-1  |     method: 'GET',
frontend-1  |     maxHeaderSize: undefined,
frontend-1  |     insecureHTTPParser: undefined,
frontend-1  |     joinDuplicateHeaders: undefined,
frontend-1  |     path: '/api/v1/books?page=1&limit=10',
frontend-1  |     _ended: true,
frontend-1  |     res: IncomingMessage {
frontend-1  |       _readableState: [ReadableState],
frontend-1  |       _events: [Object: null prototype],
frontend-1  |       _eventsCount: 4,
frontend-1  |       _maxListeners: undefined,
frontend-1  |       socket: [Socket],
frontend-1  |       httpVersionMajor: 1,
frontend-1  |       httpVersionMinor: 1,
frontend-1  |       httpVersion: '1.1',
frontend-1  |       complete: true,
frontend-1  |       rawHeaders: [Array],
frontend-1  |       rawTrailers: [],
frontend-1  |       joinDuplicateHeaders: undefined,
frontend-1  |       aborted: false,
frontend-1  |       upgrade: false,
frontend-1  |       url: '',
frontend-1  |       method: null,
frontend-1  |       statusCode: 200,
frontend-1  |       statusMessage: 'OK',
frontend-1  |       client: [Socket],
frontend-1  |       _consuming: false,
frontend-1  |       _dumped: false,
frontend-1  |       req: [Circular *1],
frontend-1  |       responseUrl: 'http://backend:5000/api/v1/books?page=1&limit=10',
frontend-1  |       redirects: [],
frontend-1  |       [Symbol(kCapture)]: false,
frontend-1  |       [Symbol(kHeaders)]: [Object],
frontend-1  |       [Symbol(kHeadersCount)]: 12,
frontend-1  |       [Symbol(kTrailers)]: null,
frontend-1  |       [Symbol(kTrailersCount)]: 0
frontend-1  |     },
frontend-1  |     aborted: false,
frontend-1  |     timeoutCb: null,
frontend-1  |     upgradeOrConnect: false,
frontend-1  |     parser: null,
frontend-1  |     maxHeadersCount: null,
frontend-1  |     reusedSocket: false,
frontend-1  |     host: 'backend',
frontend-1  |     protocol: 'http:',
frontend-1  |     _redirectable: Writable {
frontend-1  |       _writableState: [WritableState],
frontend-1  |       _events: [Object: null prototype],
frontend-1  |       _eventsCount: 3,
frontend-1  |       _maxListeners: undefined,
frontend-1  |       _options: [Object],
frontend-1  |       _ended: true,
frontend-1  |       _ending: true,
frontend-1  |       _redirectCount: 0,
frontend-1  |       _redirects: [],
frontend-1  |       _requestBodyLength: 0,
frontend-1  |       _requestBodyBuffers: [],
frontend-1  |       _onNativeResponse: [Function (anonymous)],
frontend-1  |       _currentRequest: [Circular *1],
frontend-1  |       _currentUrl: 'http://backend:5000/api/v1/books?page=1&limit=10',
frontend-1  |       [Symbol(kCapture)]: false
frontend-1  |     },
frontend-1  |     [Symbol(kCapture)]: false,
frontend-1  |     [Symbol(kBytesWritten)]: 0,
frontend-1  |     [Symbol(kNeedDrain)]: false,
frontend-1  |     [Symbol(corked)]: 0,
frontend-1  |     [Symbol(kOutHeaders)]: [Object: null prototype] {
frontend-1  |       accept: [Array],
frontend-1  |       'content-type': [Array],
frontend-1  |       'user-agent': [Array],
frontend-1  |       'accept-encoding': [Array],
frontend-1  |       host: [Array]
frontend-1  |     },
frontend-1  |     [Symbol(errored)]: null,
frontend-1  |     [Symbol(kHighWaterMark)]: 16384,
frontend-1  |     [Symbol(kRejectNonStandardBodyWrites)]: false,
frontend-1  |     [Symbol(kUniqueHeaders)]: null
frontend-1  |   },
frontend-1  |   data: {
frontend-1  |     books: [
frontend-1  |       [Object], [Object],
frontend-1  |       [Object], [Object],
frontend-1  |       [Object], [Object],
frontend-1  |       [Object], [Object],
frontend-1  |       [Object], [Object]
frontend-1  |     ],
frontend-1  |     pagination_metadata: {
frontend-1  |       current_page: 1,
frontend-1  |       page_size: 10,
frontend-1  |       total_books: 502,
frontend-1  |       total_pages: 51
frontend-1  |     }
frontend-1  |   }
frontend-1  | }
frontend-1  | getAllBooks response: {
frontend-1  |   status: 200,
frontend-1  |   statusText: 'OK',
frontend-1  |   headers: Object [AxiosHeaders] {
frontend-1  |     server: 'Werkzeug/3.0.2 Python/3.9.23',
frontend-1  |     date: 'Mon, 16 Jun 2025 19:12:18 GMT',
frontend-1  |     'content-type': 'application/json',
frontend-1  |     'content-length': '3325',
frontend-1  |     'access-control-allow-origin': '*',
frontend-1  |     connection: 'close'
frontend-1  |   },
frontend-1  |   config: {
frontend-1  |     transitional: {
frontend-1  |       silentJSONParsing: true,
frontend-1  |       forcedJSONParsing: true,
frontend-1  |       clarifyTimeoutError: false
frontend-1  |     },
frontend-1  |     adapter: [ 'xhr', 'http', 'fetch' ],
frontend-1  |     transformRequest: [ [Function (anonymous)] ],
frontend-1  |     transformResponse: [ [Function (anonymous)] ],
frontend-1  |     timeout: 0,
frontend-1  |     xsrfCookieName: 'XSRF-TOKEN',
frontend-1  |     xsrfHeaderName: 'X-XSRF-TOKEN',
frontend-1  |     maxContentLength: -1,
frontend-1  |     maxBodyLength: -1,
frontend-1  |     env: { FormData: [Function [FormData]], Blob: [class Blob] },
frontend-1  |     validateStatus: [Function: validateStatus],
frontend-1  |     headers: Object [AxiosHeaders] {
frontend-1  |       Accept: 'application/json, text/plain, */*',
frontend-1  |       'Content-Type': 'application/json',
frontend-1  |       'User-Agent': 'axios/1.10.0',
frontend-1  |       'Accept-Encoding': 'gzip, compress, deflate, br'
frontend-1  |     },
frontend-1  |     baseURL: 'http://backend:5000/api/v1',
frontend-1  |     params: { page: 1, limit: 10 },
frontend-1  |     method: 'get',
frontend-1  |     url: '/books',
frontend-1  |     allowAbsoluteUrls: true,
frontend-1  |     data: undefined
frontend-1  |   },
frontend-1  |   request: <ref *1> ClientRequest {
frontend-1  |     _events: [Object: null prototype] {
frontend-1  |       abort: [Function (anonymous)],
frontend-1  |       aborted: [Function (anonymous)],
frontend-1  |       connect: [Function (anonymous)],
frontend-1  |       error: [Function (anonymous)],
frontend-1  |       socket: [Function (anonymous)],
frontend-1  |       timeout: [Function (anonymous)],
frontend-1  |       finish: [Function: requestOnFinish]
frontend-1  |     },
frontend-1  |     _eventsCount: 7,
frontend-1  |     _maxListeners: undefined,
frontend-1  |     outputData: [],
frontend-1  |     outputSize: 0,
frontend-1  |     writable: true,
frontend-1  |     destroyed: false,
frontend-1  |     _last: true,
frontend-1  |     chunkedEncoding: false,
frontend-1  |     shouldKeepAlive: false,
frontend-1  |     maxRequestsOnConnectionReached: false,
frontend-1  |     _defaultKeepAlive: true,
frontend-1  |     useChunkedEncodingByDefault: false,
frontend-1  |     sendDate: false,
frontend-1  |     _removedConnection: false,
frontend-1  |     _removedContLen: false,
frontend-1  |     _removedTE: false,
frontend-1  |     strictContentLength: false,
frontend-1  |     _contentLength: 0,
frontend-1  |     _hasBody: true,
frontend-1  |     _trailer: '',
frontend-1  |     finished: true,
frontend-1  |     _headerSent: true,
frontend-1  |     _closed: false,
frontend-1  |     socket: Socket {
frontend-1  |       connecting: false,
frontend-1  |       _hadError: false,
frontend-1  |       _parent: null,
frontend-1  |       _host: 'backend',
frontend-1  |       _closeAfterHandlingError: false,
frontend-1  |       _readableState: [ReadableState],
frontend-1  |       _events: [Object: null prototype],
frontend-1  |       _eventsCount: 7,
frontend-1  |       _maxListeners: undefined,
frontend-1  |       _writableState: [WritableState],
frontend-1  |       allowHalfOpen: false,
frontend-1  |       _sockname: null,
frontend-1  |       _pendingData: null,
frontend-1  |       _pendingEncoding: '',
frontend-1  |       server: null,
frontend-1  |       _server: null,
frontend-1  |       parser: null,
frontend-1  |       _httpMessage: [Circular *1],
frontend-1  |       [Symbol(async_id_symbol)]: 1460,
frontend-1  |       [Symbol(kHandle)]: [TCP],
frontend-1  |       [Symbol(lastWriteQueueSize)]: 0,
frontend-1  |       [Symbol(timeout)]: null,
frontend-1  |       [Symbol(kBuffer)]: null,
frontend-1  |       [Symbol(kBufferCb)]: null,
frontend-1  |       [Symbol(kBufferGen)]: null,
frontend-1  |       [Symbol(kCapture)]: false,
frontend-1  |       [Symbol(kSetNoDelay)]: true,
frontend-1  |       [Symbol(kSetKeepAlive)]: true,
frontend-1  |       [Symbol(kSetKeepAliveInitialDelay)]: 60,
frontend-1  |       [Symbol(kBytesRead)]: 0,
frontend-1  |       [Symbol(kBytesWritten)]: 0
frontend-1  |     },
frontend-1  |     _header: 'GET /api/v1/books?page=1&limit=10 HTTP/1.1\r\n' +
frontend-1  |       'Accept: application/json, text/plain, */*\r\n' +
frontend-1  |       'Content-Type: application/json\r\n' +
frontend-1  |       'User-Agent: axios/1.10.0\r\n' +
frontend-1  |       'Accept-Encoding: gzip, compress, deflate, br\r\n' +
frontend-1  |       'Host: backend:5000\r\n' +
frontend-1  |       'Connection: close\r\n' +
frontend-1  |       '\r\n',
frontend-1  |     _keepAliveTimeout: 0,
frontend-1  |     _onPendingData: [Function: nop],
frontend-1  |     agent: Agent {
frontend-1  |       _events: [Object: null prototype],
frontend-1  |       _eventsCount: 2,
frontend-1  |       _maxListeners: undefined,
frontend-1  |       defaultPort: 80,
frontend-1  |       protocol: 'http:',
frontend-1  |       options: [Object: null prototype],
frontend-1  |       requests: [Object: null prototype] {},
frontend-1  |       sockets: [Object: null prototype],
frontend-1  |       freeSockets: [Object: null prototype] {},
frontend-1  |       keepAliveMsecs: 1000,
frontend-1  |       keepAlive: false,
frontend-1  |       maxSockets: Infinity,
frontend-1  |       maxFreeSockets: 256,
frontend-1  |       scheduling: 'lifo',
frontend-1  |       maxTotalSockets: Infinity,
frontend-1  |       totalSocketCount: 1,
frontend-1  |       [Symbol(kCapture)]: false
frontend-1  |     },
frontend-1  |     socketPath: undefined,
frontend-1  |     method: 'GET',
frontend-1  |     maxHeaderSize: undefined,
frontend-1  |     insecureHTTPParser: undefined,
frontend-1  |     joinDuplicateHeaders: undefined,
frontend-1  |     path: '/api/v1/books?page=1&limit=10',
frontend-1  |     _ended: true,
frontend-1  |     res: IncomingMessage {
frontend-1  |       _readableState: [ReadableState],
frontend-1  |       _events: [Object: null prototype],
frontend-1  |       _eventsCount: 4,
frontend-1  |       _maxListeners: undefined,
frontend-1  |       socket: [Socket],
frontend-1  |       httpVersionMajor: 1,
frontend-1  |       httpVersionMinor: 1,
frontend-1  |       httpVersion: '1.1',
frontend-1  |       complete: true,
frontend-1  |       rawHeaders: [Array],
frontend-1  |       rawTrailers: [],
frontend-1  |       joinDuplicateHeaders: undefined,
frontend-1  |       aborted: false,
frontend-1  |       upgrade: false,
frontend-1  |       url: '',
frontend-1  |       method: null,
frontend-1  |       statusCode: 200,
frontend-1  |       statusMessage: 'OK',
frontend-1  |       client: [Socket],
frontend-1  |       _consuming: false,
frontend-1  |       _dumped: false,
frontend-1  |       req: [Circular *1],
frontend-1  |       responseUrl: 'http://backend:5000/api/v1/books?page=1&limit=10',
frontend-1  |       redirects: [],
frontend-1  |       [Symbol(kCapture)]: false,
frontend-1  |       [Symbol(kHeaders)]: [Object],
frontend-1  |       [Symbol(kHeadersCount)]: 12,
frontend-1  |       [Symbol(kTrailers)]: null,
frontend-1  |       [Symbol(kTrailersCount)]: 0
frontend-1  |     },
frontend-1  |     aborted: false,
frontend-1  |     timeoutCb: null,
frontend-1  |     upgradeOrConnect: false,
frontend-1  |     parser: null,
frontend-1  |     maxHeadersCount: null,
frontend-1  |     reusedSocket: false,
frontend-1  |     host: 'backend',
frontend-1  |     protocol: 'http:',
frontend-1  |     _redirectable: Writable {
frontend-1  |       _writableState: [WritableState],
frontend-1  |       _events: [Object: null prototype],
frontend-1  |       _eventsCount: 3,
frontend-1  |       _maxListeners: undefined,
frontend-1  |       _options: [Object],
frontend-1  |       _ended: true,
frontend-1  |       _ending: true,
frontend-1  |       _redirectCount: 0,
frontend-1  |       _redirects: [],
frontend-1  |       _requestBodyLength: 0,
frontend-1  |       _requestBodyBuffers: [],
frontend-1  |       _onNativeResponse: [Function (anonymous)],
frontend-1  |       _currentRequest: [Circular *1],
frontend-1  |       _currentUrl: 'http://backend:5000/api/v1/books?page=1&limit=10',
frontend-1  |       [Symbol(kCapture)]: false
frontend-1  |     },
frontend-1  |     [Symbol(kCapture)]: false,
frontend-1  |     [Symbol(kBytesWritten)]: 0,
frontend-1  |     [Symbol(kNeedDrain)]: false,
frontend-1  |     [Symbol(corked)]: 0,
frontend-1  |     [Symbol(kOutHeaders)]: [Object: null prototype] {
frontend-1  |       accept: [Array],
frontend-1  |       'content-type': [Array],
frontend-1  |       'user-agent': [Array],
frontend-1  |       'accept-encoding': [Array],
frontend-1  |       host: [Array]
frontend-1  |     },
frontend-1  |     [Symbol(errored)]: null,
frontend-1  |     [Symbol(kHighWaterMark)]: 16384,
frontend-1  |     [Symbol(kRejectNonStandardBodyWrites)]: false,
frontend-1  |     [Symbol(kUniqueHeaders)]: null
frontend-1  |   },
frontend-1  |   data: {
frontend-1  |     books: [
frontend-1  |       [Object], [Object],
frontend-1  |       [Object], [Object],
frontend-1  |       [Object], [Object],
frontend-1  |       [Object], [Object],
frontend-1  |       [Object], [Object]
frontend-1  |     ],
frontend-1  |     pagination_metadata: {
frontend-1  |       current_page: 1,
frontend-1  |       page_size: 10,
frontend-1  |       total_books: 502,
frontend-1  |       total_pages: 51
frontend-1  |     }
frontend-1  |   }
frontend-1  | }
frontend-1  | API Response: {
frontend-1  |   status: 200,
frontend-1  |   statusText: 'OK',
frontend-1  |   headers: Object [AxiosHeaders] {
frontend-1  |     server: 'Werkzeug/3.0.2 Python/3.9.23',
frontend-1  |     date: 'Mon, 16 Jun 2025 19:12:18 GMT',
frontend-1  |     'content-type': 'application/json',
frontend-1  |     'content-length': '3325',
frontend-1  |     'access-control-allow-origin': '*',
frontend-1  |     connection: 'close'
frontend-1  |   },
frontend-1  |   config: {
frontend-1  |     transitional: {
frontend-1  |       silentJSONParsing: true,
frontend-1  |       forcedJSONParsing: true,
frontend-1  |       clarifyTimeoutError: false
frontend-1  |     },
frontend-1  |     adapter: [ 'xhr', 'http', 'fetch' ],
frontend-1  |     transformRequest: [ [Function (anonymous)] ],
frontend-1  |     transformResponse: [ [Function (anonymous)] ],
frontend-1  |     timeout: 0,
frontend-1  |     xsrfCookieName: 'XSRF-TOKEN',
frontend-1  |     xsrfHeaderName: 'X-XSRF-TOKEN',
frontend-1  |     maxContentLength: -1,
frontend-1  |     maxBodyLength: -1,
frontend-1  |     env: { FormData: [Function [FormData]], Blob: [class Blob] },
frontend-1  |     validateStatus: [Function: validateStatus],
frontend-1  |     headers: Object [AxiosHeaders] {
frontend-1  |       Accept: 'application/json, text/plain, */*',
frontend-1  |       'Content-Type': 'application/json',
frontend-1  |       'User-Agent': 'axios/1.10.0',
frontend-1  |       'Accept-Encoding': 'gzip, compress, deflate, br'
frontend-1  |     },
frontend-1  |     baseURL: 'http://backend:5000/api/v1',
frontend-1  |     params: { page: 1, limit: 10 },
frontend-1  |     method: 'get',
frontend-1  |     url: '/books',
frontend-1  |     allowAbsoluteUrls: true,
frontend-1  |     data: undefined
frontend-1  |   },
frontend-1  |   request: <ref *1> ClientRequest {
frontend-1  |     _events: [Object: null prototype] {
frontend-1  |       abort: [Function (anonymous)],
frontend-1  |       aborted: [Function (anonymous)],
frontend-1  |       connect: [Function (anonymous)],
frontend-1  |       error: [Function (anonymous)],
frontend-1  |       socket: [Function (anonymous)],
frontend-1  |       timeout: [Function (anonymous)],
frontend-1  |       finish: [Function: requestOnFinish]
frontend-1  |     },
frontend-1  |     _eventsCount: 7,
frontend-1  |     _maxListeners: undefined,
frontend-1  |     outputData: [],
frontend-1  |     outputSize: 0,
frontend-1  |     writable: true,
frontend-1  |     destroyed: false,
frontend-1  |     _last: true,
frontend-1  |     chunkedEncoding: false,
frontend-1  |     shouldKeepAlive: false,
frontend-1  |     maxRequestsOnConnectionReached: false,
frontend-1  |     _defaultKeepAlive: true,
frontend-1  |     useChunkedEncodingByDefault: false,
frontend-1  |     sendDate: false,
frontend-1  |     _removedConnection: false,
frontend-1  |     _removedContLen: false,
frontend-1  |     _removedTE: false,
frontend-1  |     strictContentLength: false,
frontend-1  |     _contentLength: 0,
frontend-1  |     _hasBody: true,
frontend-1  |     _trailer: '',
frontend-1  |     finished: true,
frontend-1  |     _headerSent: true,
frontend-1  |     _closed: false,
frontend-1  |     socket: Socket {
frontend-1  |       connecting: false,
frontend-1  |       _hadError: false,
frontend-1  |       _parent: null,
frontend-1  |       _host: 'backend',
frontend-1  |       _closeAfterHandlingError: false,
frontend-1  |       _readableState: [ReadableState],
frontend-1  |       _events: [Object: null prototype],
frontend-1  |       _eventsCount: 7,
frontend-1  |       _maxListeners: undefined,
frontend-1  |       _writableState: [WritableState],
frontend-1  |       allowHalfOpen: false,
frontend-1  |       _sockname: null,
frontend-1  |       _pendingData: null,
frontend-1  |       _pendingEncoding: '',
frontend-1  |       server: null,
frontend-1  |       _server: null,
frontend-1  |       parser: null,
frontend-1  |       _httpMessage: [Circular *1],
frontend-1  |       [Symbol(async_id_symbol)]: 1500,
frontend-1  |       [Symbol(kHandle)]: [TCP],
frontend-1  |       [Symbol(lastWriteQueueSize)]: 0,
frontend-1  |       [Symbol(timeout)]: null,
frontend-1  |       [Symbol(kBuffer)]: null,
frontend-1  |       [Symbol(kBufferCb)]: null,
frontend-1  |       [Symbol(kBufferGen)]: null,
frontend-1  |       [Symbol(kCapture)]: false,
frontend-1  |       [Symbol(kSetNoDelay)]: true,
frontend-1  |       [Symbol(kSetKeepAlive)]: true,
frontend-1  |       [Symbol(kSetKeepAliveInitialDelay)]: 60,
frontend-1  |       [Symbol(kBytesRead)]: 0,
frontend-1  |       [Symbol(kBytesWritten)]: 0
frontend-1  |     },
frontend-1  |     _header: 'GET /api/v1/books?page=1&limit=10 HTTP/1.1\r\n' +
frontend-1  |       'Accept: application/json, text/plain, */*\r\n' +
frontend-1  |       'Content-Type: application/json\r\n' +
frontend-1  |       'User-Agent: axios/1.10.0\r\n' +
frontend-1  |       'Accept-Encoding: gzip, compress, deflate, br\r\n' +
frontend-1  |       'Host: backend:5000\r\n' +
frontend-1  |       'Connection: close\r\n' +
frontend-1  |       '\r\n',
frontend-1  |     _keepAliveTimeout: 0,
frontend-1  |     _onPendingData: [Function: nop],
frontend-1  |     agent: Agent {
frontend-1  |       _events: [Object: null prototype],
frontend-1  |       _eventsCount: 2,
frontend-1  |       _maxListeners: undefined,
frontend-1  |       defaultPort: 80,
frontend-1  |       protocol: 'http:',
frontend-1  |       options: [Object: null prototype],
frontend-1  |       requests: [Object: null prototype] {},
frontend-1  |       sockets: [Object: null prototype],
frontend-1  |       freeSockets: [Object: null prototype] {},
frontend-1  |       keepAliveMsecs: 1000,
frontend-1  |       keepAlive: false,
frontend-1  |       maxSockets: Infinity,
frontend-1  |       maxFreeSockets: 256,
frontend-1  |       scheduling: 'lifo',
frontend-1  |       maxTotalSockets: Infinity,
frontend-1  |       totalSocketCount: 1,
frontend-1  |       [Symbol(kCapture)]: false
frontend-1  |     },
frontend-1  |     socketPath: undefined,
frontend-1  |     method: 'GET',
frontend-1  |     maxHeaderSize: undefined,
frontend-1  |     insecureHTTPParser: undefined,
frontend-1  |     joinDuplicateHeaders: undefined,
frontend-1  |     path: '/api/v1/books?page=1&limit=10',
frontend-1  |     _ended: true,
frontend-1  |     res: IncomingMessage {
frontend-1  |       _readableState: [ReadableState],
frontend-1  |       _events: [Object: null prototype],
frontend-1  |       _eventsCount: 4,
frontend-1  |       _maxListeners: undefined,
frontend-1  |       socket: [Socket],
frontend-1  |       httpVersionMajor: 1,
frontend-1  |       httpVersionMinor: 1,
frontend-1  |       httpVersion: '1.1',
frontend-1  |       complete: true,
frontend-1  |       rawHeaders: [Array],
frontend-1  |       rawTrailers: [],
frontend-1  |       joinDuplicateHeaders: undefined,
frontend-1  |       aborted: false,
frontend-1  |       upgrade: false,
frontend-1  |       url: '',
frontend-1  |       method: null,
frontend-1  |       statusCode: 200,
frontend-1  |       statusMessage: 'OK',
frontend-1  |       client: [Socket],
frontend-1  |       _consuming: false,
frontend-1  |       _dumped: false,
frontend-1  |       req: [Circular *1],
frontend-1  |       responseUrl: 'http://backend:5000/api/v1/books?page=1&limit=10',
frontend-1  |       redirects: [],
frontend-1  |       [Symbol(kCapture)]: false,
frontend-1  |       [Symbol(kHeaders)]: [Object],
frontend-1  |       [Symbol(kHeadersCount)]: 12,
frontend-1  |       [Symbol(kTrailers)]: null,
frontend-1  |       [Symbol(kTrailersCount)]: 0
frontend-1  |     },
frontend-1  |     aborted: false,
frontend-1  |     timeoutCb: null,
frontend-1  |     upgradeOrConnect: false,
frontend-1  |     parser: null,
frontend-1  |     maxHeadersCount: null,
frontend-1  |     reusedSocket: false,
frontend-1  |     host: 'backend',
frontend-1  |     protocol: 'http:',
frontend-1  |     _redirectable: Writable {
frontend-1  |       _writableState: [WritableState],
frontend-1  |       _events: [Object: null prototype],
frontend-1  |       _eventsCount: 3,
frontend-1  |       _maxListeners: undefined,
frontend-1  |       _options: [Object],
frontend-1  |       _ended: true,
frontend-1  |       _ending: true,
frontend-1  |       _redirectCount: 0,
frontend-1  |       _redirects: [],
frontend-1  |       _requestBodyLength: 0,
frontend-1  |       _requestBodyBuffers: [],
frontend-1  |       _onNativeResponse: [Function (anonymous)],
frontend-1  |       _currentRequest: [Circular *1],
frontend-1  |       _currentUrl: 'http://backend:5000/api/v1/books?page=1&limit=10',
frontend-1  |       [Symbol(kCapture)]: false
frontend-1  |     },
frontend-1  |     [Symbol(kCapture)]: false,
frontend-1  |     [Symbol(kBytesWritten)]: 0,
frontend-1  |     [Symbol(kNeedDrain)]: false,
frontend-1  |     [Symbol(corked)]: 0,
frontend-1  |     [Symbol(kOutHeaders)]: [Object: null prototype] {
frontend-1  |       accept: [Array],
frontend-1  |       'content-type': [Array],
frontend-1  |       'user-agent': [Array],
frontend-1  |       'accept-encoding': [Array],
frontend-1  |       host: [Array]
frontend-1  |     },
frontend-1  |     [Symbol(errored)]: null,
frontend-1  |     [Symbol(kHighWaterMark)]: 16384,
frontend-1  |     [Symbol(kRejectNonStandardBodyWrites)]: false,
frontend-1  |     [Symbol(kUniqueHeaders)]: null
frontend-1  |   },
frontend-1  |   data: {
frontend-1  |     books: [
frontend-1  |       [Object], [Object],
frontend-1  |       [Object], [Object],
frontend-1  |       [Object], [Object],
frontend-1  |       [Object], [Object],
frontend-1  |       [Object], [Object]
frontend-1  |     ],
frontend-1  |     pagination_metadata: {
frontend-1  |       current_page: 1,
frontend-1  |       page_size: 10,
frontend-1  |       total_books: 502,
frontend-1  |       total_pages: 51
frontend-1  |     }
frontend-1  |   }
frontend-1  | }
frontend-1  | getAllBooks response: {
frontend-1  |   status: 200,
frontend-1  |   statusText: 'OK',
frontend-1  |   headers: Object [AxiosHeaders] {
frontend-1  |     server: 'Werkzeug/3.0.2 Python/3.9.23',
frontend-1  |     date: 'Mon, 16 Jun 2025 19:12:18 GMT',
frontend-1  |     'content-type': 'application/json',
frontend-1  |     'content-length': '3325',
frontend-1  |     'access-control-allow-origin': '*',
frontend-1  |     connection: 'close'
frontend-1  |   },
frontend-1  |   config: {
frontend-1  |     transitional: {
frontend-1  |       silentJSONParsing: true,
frontend-1  |       forcedJSONParsing: true,
frontend-1  |       clarifyTimeoutError: false
frontend-1  |     },
frontend-1  |     adapter: [ 'xhr', 'http', 'fetch' ],
frontend-1  |     transformRequest: [ [Function (anonymous)] ],
frontend-1  |     transformResponse: [ [Function (anonymous)] ],
frontend-1  |     timeout: 0,
frontend-1  |     xsrfCookieName: 'XSRF-TOKEN',
frontend-1  |     xsrfHeaderName: 'X-XSRF-TOKEN',
frontend-1  |     maxContentLength: -1,
frontend-1  |     maxBodyLength: -1,
frontend-1  |     env: { FormData: [Function [FormData]], Blob: [class Blob] },
frontend-1  |     validateStatus: [Function: validateStatus],
frontend-1  |     headers: Object [AxiosHeaders] {
frontend-1  |       Accept: 'application/json, text/plain, */*',
frontend-1  |       'Content-Type': 'application/json',
frontend-1  |       'User-Agent': 'axios/1.10.0',
frontend-1  |       'Accept-Encoding': 'gzip, compress, deflate, br'
frontend-1  |     },
frontend-1  |     baseURL: 'http://backend:5000/api/v1',
frontend-1  |     params: { page: 1, limit: 10 },
frontend-1  |     method: 'get',
frontend-1  |     url: '/books',
frontend-1  |     allowAbsoluteUrls: true,
frontend-1  |     data: undefined
frontend-1  |   },
frontend-1  |   request: <ref *1> ClientRequest {
frontend-1  |     _events: [Object: null prototype] {
frontend-1  |       abort: [Function (anonymous)],
frontend-1  |       aborted: [Function (anonymous)],
frontend-1  |       connect: [Function (anonymous)],
frontend-1  |       error: [Function (anonymous)],
frontend-1  |       socket: [Function (anonymous)],
frontend-1  |       timeout: [Function (anonymous)],
frontend-1  |       finish: [Function: requestOnFinish]
frontend-1  |     },
frontend-1  |     _eventsCount: 7,
frontend-1  |     _maxListeners: undefined,
frontend-1  |     outputData: [],
frontend-1  |     outputSize: 0,
frontend-1  |     writable: true,
frontend-1  |     destroyed: false,
frontend-1  |     _last: true,
frontend-1  |     chunkedEncoding: false,
frontend-1  |     shouldKeepAlive: false,
frontend-1  |     maxRequestsOnConnectionReached: false,
frontend-1  |     _defaultKeepAlive: true,
frontend-1  |     useChunkedEncodingByDefault: false,
frontend-1  |     sendDate: false,
frontend-1  |     _removedConnection: false,
frontend-1  |     _removedContLen: false,
frontend-1  |     _removedTE: false,
frontend-1  |     strictContentLength: false,
frontend-1  |     _contentLength: 0,
frontend-1  |     _hasBody: true,
frontend-1  |     _trailer: '',
frontend-1  |     finished: true,
frontend-1  |     _headerSent: true,
frontend-1  |     _closed: false,
frontend-1  |     socket: Socket {
frontend-1  |       connecting: false,
frontend-1  |       _hadError: false,
frontend-1  |       _parent: null,
frontend-1  |       _host: 'backend',
frontend-1  |       _closeAfterHandlingError: false,
frontend-1  |       _readableState: [ReadableState],
frontend-1  |       _events: [Object: null prototype],
frontend-1  |       _eventsCount: 7,
frontend-1  |       _maxListeners: undefined,
frontend-1  |       _writableState: [WritableState],
frontend-1  |       allowHalfOpen: false,
frontend-1  |       _sockname: null,
frontend-1  |       _pendingData: null,
frontend-1  |       _pendingEncoding: '',
frontend-1  |       server: null,
frontend-1  |       _server: null,
frontend-1  |       parser: null,
frontend-1  |       _httpMessage: [Circular *1],
frontend-1  |       [Symbol(async_id_symbol)]: 1500,
frontend-1  |       [Symbol(kHandle)]: [TCP],
frontend-1  |       [Symbol(lastWriteQueueSize)]: 0,
frontend-1  |       [Symbol(timeout)]: null,
frontend-1  |       [Symbol(kBuffer)]: null,
frontend-1  |       [Symbol(kBufferCb)]: null,
frontend-1  |       [Symbol(kBufferGen)]: null,
frontend-1  |       [Symbol(kCapture)]: false,
frontend-1  |       [Symbol(kSetNoDelay)]: true,
frontend-1  |       [Symbol(kSetKeepAlive)]: true,
frontend-1  |       [Symbol(kSetKeepAliveInitialDelay)]: 60,
frontend-1  |       [Symbol(kBytesRead)]: 0,
frontend-1  |       [Symbol(kBytesWritten)]: 0
frontend-1  |     },
frontend-1  |     _header: 'GET /api/v1/books?page=1&limit=10 HTTP/1.1\r\n' +
frontend-1  |       'Accept: application/json, text/plain, */*\r\n' +
frontend-1  |       'Content-Type: application/json\r\n' +
frontend-1  |       'User-Agent: axios/1.10.0\r\n' +
frontend-1  |       'Accept-Encoding: gzip, compress, deflate, br\r\n' +
frontend-1  |       'Host: backend:5000\r\n' +
frontend-1  |       'Connection: close\r\n' +
frontend-1  |       '\r\n',
frontend-1  |     _keepAliveTimeout: 0,
frontend-1  |     _onPendingData: [Function: nop],
frontend-1  |     agent: Agent {
frontend-1  |       _events: [Object: null prototype],
frontend-1  |       _eventsCount: 2,
frontend-1  |       _maxListeners: undefined,
frontend-1  |       defaultPort: 80,
frontend-1  |       protocol: 'http:',
frontend-1  |       options: [Object: null prototype],
frontend-1  |       requests: [Object: null prototype] {},
frontend-1  |       sockets: [Object: null prototype],
frontend-1  |       freeSockets: [Object: null prototype] {},
frontend-1  |       keepAliveMsecs: 1000,
frontend-1  |       keepAlive: false,
frontend-1  |       maxSockets: Infinity,
frontend-1  |       maxFreeSockets: 256,
frontend-1  |       scheduling: 'lifo',
frontend-1  |       maxTotalSockets: Infinity,
frontend-1  |       totalSocketCount: 1,
frontend-1  |       [Symbol(kCapture)]: false
frontend-1  |     },
frontend-1  |     socketPath: undefined,
frontend-1  |     method: 'GET',
frontend-1  |     maxHeaderSize: undefined,
frontend-1  |     insecureHTTPParser: undefined,
frontend-1  |     joinDuplicateHeaders: undefined,
frontend-1  |     path: '/api/v1/books?page=1&limit=10',
frontend-1  |     _ended: true,
frontend-1  |     res: IncomingMessage {
frontend-1  |       _readableState: [ReadableState],
frontend-1  |       _events: [Object: null prototype],
frontend-1  |       _eventsCount: 4,
frontend-1  |       _maxListeners: undefined,
frontend-1  |       socket: [Socket],
frontend-1  |       httpVersionMajor: 1,
frontend-1  |       httpVersionMinor: 1,
frontend-1  |       httpVersion: '1.1',
frontend-1  |       complete: true,
frontend-1  |       rawHeaders: [Array],
frontend-1  |       rawTrailers: [],
frontend-1  |       joinDuplicateHeaders: undefined,
frontend-1  |       aborted: false,
frontend-1  |       upgrade: false,
frontend-1  |       url: '',
frontend-1  |       method: null,
frontend-1  |       statusCode: 200,
frontend-1  |       statusMessage: 'OK',
frontend-1  |       client: [Socket],
frontend-1  |       _consuming: false,
frontend-1  |       _dumped: false,
frontend-1  |       req: [Circular *1],
frontend-1  |       responseUrl: 'http://backend:5000/api/v1/books?page=1&limit=10',
frontend-1  |       redirects: [],
frontend-1  |       [Symbol(kCapture)]: false,
frontend-1  |       [Symbol(kHeaders)]: [Object],
frontend-1  |       [Symbol(kHeadersCount)]: 12,
frontend-1  |       [Symbol(kTrailers)]: null,
frontend-1  |       [Symbol(kTrailersCount)]: 0
frontend-1  |     },
frontend-1  |     aborted: false,
frontend-1  |     timeoutCb: null,
frontend-1  |     upgradeOrConnect: false,
frontend-1  |     parser: null,
frontend-1  |     maxHeadersCount: null,
frontend-1  |     reusedSocket: false,
frontend-1  |     host: 'backend',
frontend-1  |     protocol: 'http:',
frontend-1  |     _redirectable: Writable {
frontend-1  |       _writableState: [WritableState],
frontend-1  |       _events: [Object: null prototype],
frontend-1  |       _eventsCount: 3,
frontend-1  |       _maxListeners: undefined,
frontend-1  |       _options: [Object],
frontend-1  |       _ended: true,
frontend-1  |       _ending: true,
frontend-1  |       _redirectCount: 0,
frontend-1  |       _redirects: [],
frontend-1  |       _requestBodyLength: 0,
frontend-1  |       _requestBodyBuffers: [],
frontend-1  |       _onNativeResponse: [Function (anonymous)],
frontend-1  |       _currentRequest: [Circular *1],
frontend-1  |       _currentUrl: 'http://backend:5000/api/v1/books?page=1&limit=10',
frontend-1  |       [Symbol(kCapture)]: false
frontend-1  |     },
frontend-1  |     [Symbol(kCapture)]: false,
frontend-1  |     [Symbol(kBytesWritten)]: 0,
frontend-1  |     [Symbol(kNeedDrain)]: false,
frontend-1  |     [Symbol(corked)]: 0,
frontend-1  |     [Symbol(kOutHeaders)]: [Object: null prototype] {
frontend-1  |       accept: [Array],
frontend-1  |       'content-type': [Array],
frontend-1  |       'user-agent': [Array],
frontend-1  |       'accept-encoding': [Array],
frontend-1  |       host: [Array]
frontend-1  |     },
frontend-1  |     [Symbol(errored)]: null,
frontend-1  |     [Symbol(kHighWaterMark)]: 16384,
frontend-1  |     [Symbol(kRejectNonStandardBodyWrites)]: false,
frontend-1  |     [Symbol(kUniqueHeaders)]: null
frontend-1  |   },
frontend-1  |   data: {
frontend-1  |     books: [
frontend-1  |       [Object], [Object],
frontend-1  |       [Object], [Object],
frontend-1  |       [Object], [Object],
frontend-1  |       [Object], [Object],
frontend-1  |       [Object], [Object]
frontend-1  |     ],
frontend-1  |     pagination_metadata: {
frontend-1  |       current_page: 1,
frontend-1  |       page_size: 10,
frontend-1  |       total_books: 502,
frontend-1  |       total_pages: 51
frontend-1  |     }
frontend-1  |   }
frontend-1  | }
